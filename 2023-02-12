프로세스 동기화 - 동시다발적으로 실행되는 프로세스들은 공동의 목적을 올바르게 수행하기 위해 서로 협력하며 영향을 주고 받음. 이때 실행순서와 자원의 일관성을 보장해야 함.
프로세스들 사이의 수행 시기를 맞추는 것
 - 실행 순서 제어 : 프로세스를 올바른 순서대로 실행하기
 - 상호 배제 : 동시에 접근해서는 안되는 자원에 하나의 프로세스만 접근하게 하기

공유 자원 - 동시에 실행되는 프로세스들이 같이 공유해서 사용하는 자원(변수, 파일, 장치)
임계 구역 - 공유 자원에 접근하는 코드 중 동시에 실행하면 문제가 발생하는 코드 영역
레이스 컨디션 - 임계 구역의 코드를 여러 프로세스가 동시에 접근하여 실행해서 문제가 발생하는 것

상호 배제 : 한 프로세스가 임계구역에 진입했다면 다른 프로세스는 임계 구역에 들어올 수 없다.
진행 : 임계 구역에 어떤 프로세스도 진입하지 않았다면 임계 구역에 진입하고자 하는 프로세스는 들어갈 수 있어야 한다.
유한 대기 : 한 프로세스가 임계구역에 진입하고 싶다면 그 프로세스는 언젠간 임계구역에 들어올 수 있어야 한다.

뮤텍스락 : 탈의실... 동시에 접근해선느 안되는 자원에 동시에 접근하지 못하도록 막는 도구... 자물쇠를 걸어놓는다...
 - 자물쇠 역할 : 프로세스들이 공유하는 전역변수 lock
 - 임계 구역을 잠그는 역할 : acquire 함수
 - 임계 구역의 잠금을 해제하는 역할 : release 함수
바쁜 대기 - 지속적으로 확인하는 것

세마포 : 뮤텍스락과 비슷.. 조금 더 일반화. 공유 자원이 여러개 있는 상황에서도 적용이 가능한 동기화 도구... 철도 신호...
 - 임계 구역에 진입할 수 있는 프로세스의 개수를 나타내는 전역 변수 S
 - 임계 구역에 들어가도 좋은지, 기다려야하는 지 wait 함수
 - 임계 구역 앞에서 기다리는 프로세스에 가도 좋다는 신호를 주는 signal 함수

모니터 : 공유 자원과 공유 자원에 접근하기 위한 인터페이스를 묶어서 관리. 공유 자원에 접근하고자 하는 프로세스를 큐에 넣어서 관리.
즉 공유 자원을 다루는 인터페이스에 접근하기 위한 큐를 만들고, 모니터 안에는 항상 하나의 프로세스만 들어오도록 하여 상호 배제를 위한 동기화를 제공. 조건 변수를 사용

