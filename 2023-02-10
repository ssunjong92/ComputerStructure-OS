CPU 스케쥴링 - 운영체제가 프로세스에게 공정하고 합리적으로 CPU를 배분하는 것... 성능과도 직결
프로세스마다 우선순위가 다르기 때문에... 입출력이 많은 작업이 우선순위가 높다! 우선순위는 PCB에 저장되어 있고 운영체제는 이를 참조해 CPU를 할당해준다.

스케쥴링 큐 : CPU를 사용할 다음 프로세스를 찾기 위해 운영체제가 모든 PCB를 참조하면 비효율적이다. 프로세스에게 '줄을 서서 대기할 것'을 요구 - 스케쥴링 큐로 구현하고 관리
준비큐 - CPU를 이용하기 위해 기다리는 줄 // 대기큐 - 입출력장치를 이용하기 위해 기다리는 줄

선점형 - 프로세스가 CPU,자원을 할당받아 사용하고 있더라도 운영체제가 프로세스로부터 자원을 강제로 빼앗아 다른 프로세스에 할당할 수 있는 스케쥴링 방식.
비선점형 - 프로세스가 자원을 사용하고 있다면 그 프로세스가 종료되거나 대기상태에 접어들기 전까지 다른 프로세스가 끼어들 수 없는 스케쥴링 방식. (=독점 스케쥴링)
선점형 : 한 프로세스의 독점을 막고 프로세스들에게 골고루 자원을 배분할 수 있지만 문맥 교환 과정에서 오버헤드가 발생할 수 있다.

스케쥴링 알고리즘의 종류
선입 선처리 스케쥴링(FCFS) - 단순히 준비큐에 삽입된 순서대로 프로세스들을 처리하는 비선점형 스케쥴링 방식.. 호위효과(CPU실행 시간보다 대기시간이 길어짐)
최단작업 우선 스케쥴링(SJF) - 호위 효과를 줄이는 방식으로 CPU 실행시간이 짧은 것들을 먼저 처리
라운드 로빈 스케쥴링 - 선입 선처리 스케쥴링에 타임 슬라이스 개념이 더해짐. 타임슬라이스란 각 프로세스가 CPU를 사용할 수 있는 정해진 시간.
                     즉 정해진 시간 만큼 CPU를 돌아가며 실행하는 선점형 스케쥴링 방식. 타임슬라이스가 너무 크면 선입 선처리랑 다를게 없고 너무 작으면 잦은 문맥 교환 발생...
최소 잔여 시간 우선 스케쥴링(SRT) - 최단작업 스케쥴링과 라운드 로빈이 합쳐짐. 타임슬라이스 방식을 사용하되 남아있는 작업 시간이 가장 적은 프로세스부터 처리
우선순위 스케쥴링 - 우선순위를 부여하고 우선순위가 높은 프로세스부터 실행.. 우선순위가 같으면 선입 선처리. 기아 현상이란 우선순위가 낮은 프로세스는 계속 실행이 연기되는 현상.
                   에이징 : 오랫동안 대기한 프로세스의 우선순위를 점차 높이는 것.
다단계 큐 스케쥴링 - 우선순위 스케쥴링의 발전형태. 우선순위 별로 준비큐를 여러개 사용하여 우선 순위가 가장 높은 큐의 프로세스를 먼저 처리.
                   프로세스 유형별로 우선순위를 구분하여 실행하는 것이 편리(어떤 큐에는 CPU 집중, 입출력 집중 프로세스 모아두고...), 
									 큐별로 타임 슬라이스를 여러개, 다른 스케쥴링 알고리즘 사용 가능
다단계 피드백 큐 스케쥴링 - 다단계 큐의 업그레이드 단계. 프로세스들이 큐 사이를 이동할 수 없는데 기아 현상이 발생할 수 있다. 프로세스들이 큐 사이를 이동할 수 있다.
즉! 어떤 프로세스의 CPU 사용이 길면 낮은 우선순위큐로 이동시키고 낮은 우선순위 큐에서 오랜 시간 기다린다면 높은 우선순위 큐로 이동... 일반적으로 많이 사용
